#!/bin/python3

import os
from sys import argv
from collections import defaultdict

# type to extensions
VALID_NAMES = {
    'apaga': ('sql',),
    'consulta': ('sql',),
    'controle': ('sql',),
    'fisico': ('sql',),
    'popula': ('sql',),
    'conceitual': ('brM3',),
    'logico': ('brM3',),
    'doc': ('pdf', 'doc', 'docx'),
}
exts = set(ext for exts in VALID_NAMES.values() for ext in exts)

if len(argv) <= 3:
    print("Usage example: vandor-rename"
          " [class_name] [your_name] [your_registration_number]")
    exit(0)

_, class_name, name, registration_number, *_ = argv

def get_new_name(typee, ext=None):
    new_name = '_'.join((class_name, typee, name, registration_number))
    ext = ext or VALID_NAMES[typee.lower()][0]

    return f'{new_name}.{ext}'

# Renamed exercise is like: class_type_name_registrationnumber.ext
def is_renamed_exercise(filee):
    return any((f.endswith(ext)) for ext in exts) and f.startswith('aula')

# Shortname exercise is like: consulta.sql
def is_shortname_exercise(filee):
    short_names = (f'{n}.{ext}' for n, exts in
                 VALID_NAMES.items() for ext in exts) # Just some iterations

    return filee in short_names

def type_to_presentation_type(typee):
    if typee.lower() != 'doc':
        return typee[0].upper() + typee[1:]
    return 'DOC'


all_files = os.listdir()

new_files = defaultdict(lambda: '')
new_files_reversed = defaultdict(lambda: '')

for f in all_files:
    if not new_files[f]: # Sanity check
        new_name = ''
        if is_renamed_exercise(f):
            typee = type_to_presentation_type(f.split('_')[1])
            new_name = get_new_name(typee)
        elif is_shortname_exercise(f):
            typee, ext = f.split('.')
            typee = type_to_presentation_type(typee)
            new_name = get_new_name(typee, ext)
        else:
            continue

        new_files[f] = new_name
        new_files_reversed[new_name] = f
    else:
        raise ValueError(f"'{new_name}' can be generated by '{f}'"
                         f" and '{new_files_reversed[f]}'!"
                         " No files will be renamed!")

for old_name, new_name in new_files.items():
    if new_name:
        os.rename(old_name, new_name)
        print(f"'{old_name} renamed to '{new_name}'")

print('\nFinished! Your exercise is renamed!')
